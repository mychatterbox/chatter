---
import { getImage } from "astro:assets";

// 이미지 모듈 타입 정의
type ImageModule = { default: string };

const imageGlob = import.meta.glob<ImageModule>('../../content/**/*.{png,jpg,jpeg,webp}');

    const defaultOgImage = new URL('/images/no_ogimage.png', Astro.site).toString();

export interface Props {
  ogImage?: string;
}

const { ogImage } = Astro.props;
let finalOgImage: string;

if (!ogImage) {
  finalOgImage = defaultOgImage;
} else {
  try {
    const imagePath = ogImage.startsWith('/') ? ogImage.slice(1) : ogImage;
    const globPath = `../../content/${imagePath}`;
    
    const imageModule = await imageGlob[globPath]?.();
    if (imageModule?.default) {
      const optimized = await getImage({
        src: imageModule.default,
        format: "webp",
        width: 1200,
        height: 630,
        quality: 80,
      });
      finalOgImage = new URL(optimized.src, Astro.url).toString();
    } else {
      // public 폴더 이미지 처리
      finalOgImage = new URL(ogImage, Astro.url).toString();
    }
  } catch (e) {
    console.error("OG Image 처리 실패:", e);
    finalOgImage = defaultOgImage;
  }
}
---

<meta property="og:image" content={finalOgImage} />
<meta property="twitter:image" content={finalOgImage} />